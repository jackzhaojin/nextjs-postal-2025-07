# Nginx configuration for CloudFront integration
# Based on aws-t2-free-vm proven patterns for B2B Shipping Portal

events {
    worker_connections 1024;
}

http {
    upstream nextjs_shipping {
        server nextjs-shipping-portal:3000;
    }

    # Main HTTP server - CloudFront handles SSL termination
    server {
        listen 80;
        server_name localhost postal-transport-portal.jackzhaojin.com;

        # Main application routing (root path for direct nginx access)
        location / {
            proxy_pass http://nextjs_shipping;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto http;
            
            # WebSocket support (for Next.js dev features if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # CloudFront specific routing with subpath handling
        # CloudFront origin: http://ec2-instance/shipping-portal/
        # Public URL: https://postal-transport-portal.jackzhaojin.com/
        location /shipping-portal/ {
            # Remove the subpath before forwarding to Next.js
            rewrite ^/shipping-portal/(.*)$ /$1 break;
            
            proxy_pass http://nextjs_shipping;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # CloudFront handles HTTPS
            proxy_set_header X-Forwarded-Host postal-transport-portal.jackzhaojin.com;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check endpoint for nginx itself
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # CloudFront health check endpoint (mapped to app health)
        location /shipping-portal-health {
            proxy_pass http://nextjs_shipping/api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            access_log off;
        }
    }

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}